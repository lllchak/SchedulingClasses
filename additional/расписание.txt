Немного по структуре таблиц:

Идея сделать большую таблицу где будут храниться все возможные занятия (там будут все преподы, все группы 
и так далее). Из этой большой таблицы будут браться конкретные группы под работу с которыми алгоритм уже есть.

Дальше нужно реализовать расстановку расписания на всю неделю только для одной группы. После расстановки 
расписания на один день можно обнулить словарь и заполнять его рандомными значениями (странная идея, но почему нет).

Или можно сейчас попробовать реализовать соблюдение жестких ограничений. Просто без выполнения жестких ограничений 
мы не сможем масштабировать расписание на всю неделю, а тем более больше чем не всю неделю.

Тогда мы скорее всего спускаемся ниже и пробуем правильно обработать жесткие ограничения. Так как уже понятно как 
стоит обрабатывать мягкие (но не стоит забывать про баг с вложенным циклом при проверке мягких ограничений).

Как лучше обработать большую таблицу с данными по всем группам?
Для начала стоит понять, что в ней будет лежать и что соответсвенно из нее можно забирать для обработки (все это
по сути лежит в статье и это спокойно можно оттуда взять).

Еще вопросик, как отделить одну группу от другой уже в таблице, как по мне это сложно, можно придумать что то с 
нулевой строкой, как это было в all_lessons на первой и на послейдней строке, но будет ли это работать? По идее,
должно, ведь время тоже будет нулевое, что впринципе невозможно. (сошлись, что можно так сделать)

По факту, есть три основных жестких требования:
1. Занятия не совпадали по времени
2. Занятия не совпадали по месту проведения
3. Отсутствие окон у студентов

Время более приотритетно, потому что без конкрентного тайм-слота непонятно 

Идейно у нас есть:
Продумали, как хранить все группы в одной большой таблице.
Сейчас мы можем подобать время для занятий для одной группы (ограничение номер 1 соответсвенно выполняется).
Пока что все работает для одной группы, и непонятно как это все масштабировать для нескольких.
available_time должен быть словарем, а не списком (ключ - номер пары, значение - список возможных для него комнат)
Смотреть окна у групп можно также как и преподов.

Основная задача для подбора времени - обрабатывать несколько групп (это пока что баг).

Мы берем значение аудитории из всего множества аудиторий, но забираем только ту, которая дает наилучшее качество.
Как раз как реализовать эту штуку и не понятно, просто каждый раз смотреть качество для отдельно взятой пары
будет очень медленно работать (это по сути n комбинаций для каждой из n пар (n! * n, что уже - добрый вечер)). 
Здесь то думаю и может очень сильно выручить метод ветвей и границ, так как он не перебирает все возможные 
варианты, а отсекает, которые точно не подходят. 

Надо еще предложить поставить менедежера, чтобы всегда, когда Юли не будет, этот самый человечек отчитывался по
прогрессу на данный момент.

Надо продумать деление на лекционные и семинарские дни.
Также можно попробовать расставив расписание для одной группы на направлении, просто перемешать эти же занятия 
для другой группы. 






 

 